def executeSQLCommand (sql_command):

    ##########################
    # Connect to the MySQL DB
    ##########################

    password = "Uniisttoll123" # this is your MySQL database password, NOT the password you use when you log into PythonAnywhere! I told you to write it down somewhere... >:->
    results = ()

    # you'll find the info you need to enter in your Databases Tab on PythonAnywhere
    db = MySQLdb.connect("Wichelhaus.mysql.pythonanywhere-services.com","Wichelhaus",password, "Wichelhaus$EmployeeDB")


    cursor = db.cursor()

    try:
        cursor.execute(sql_command)  # Execute the SQL command
        results = cursor.fetchall()  # Fetch all the rows in a list of lists.
        db.commit() # only necessary if the command changes the DB, but hey...
    except:
        db.rollback() # if stuff went wrong, no change to the DB should be made
        print ("+++++++++ Error: unable to fetch data from database")
    db.close()
    return results


###################################################
#
#Main funfction
#
###################################################

def application(environ, start_response):
    if environ.get('PATH_INFO') == '/':
        status = '200 OK'
        content = HOMEPAGE

    elif environ.get('PATH_INFO') == '/joinevent':
        status = '200 OK'
        content = JOIN_EVENT_START

        #construct an HTML that has the results from the SELECT statment mixed in


    elif environ.get('PATH_INFO') == '/hostevent':
        status = '200 OK'
        # connet to SQL data base
        sql_cmd = "SELECT Eventi.Event_Name, Eventi.Event_Type, Eventi.Host, Eventi.Participants, Eventi.Date_And_Time, Eventi.Location, Eventi.Email, Eventi.Price FROM Eventi"
        print ("++++++++++++++++++", sql_cmd)
        Eventi_from_db = executeSQLCommand (sql_cmd)



        Eventi_table_string = ""
        for Eventis_record in Eventi_from_db:
            # a record is a LIST of values (one value per column), so we need to access each value separately.
            # This follows the sequence in the SELECT statement above, starting with 0!
            Event_Name = str (Eventis_record[0]) # employee_record[0] includes the FirstName value
            Event_Type = str (Eventis_record[1]) # employee_record[1] includes the LastName value
            Host = str (Eventis_record[2])
            Participants = str (Eventis_record[3])
            Date_And_Time = str (Eventis_record[4])
            Location = str (Eventis_record[5])
            Price = str (Eventis_record[6])
            Email = str (Eventis_record[7])

            Eventi_table_string += "<tr>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Event_Name
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Event_Type
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Host
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Participants
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Date_And_Time
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Location
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Price
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Email
            Eventi_table_string += "</td>"
            Eventi_table_string += "<tr>"



            # Print fetched employee_record, just so we see it
            print ("++++++++++++++++++", Event_Name, Event_Type, Host, Participants, Date_And_Time, Location, Price, Email )

        content = HOST_EVENT_START + Eventi_table_string + HOST_EVENT_END


        ##################### INSERT ######################

    elif environ.get('PATH_INFO') == '/Insert':
        status = '200 OK'
        print ("###################  INSERT PAGE ########################")


        #print ("+++++++++++ SQL command +++++ ", sql_cmd)

        # get the user input from the HTTP query string for = Event_Name
        HttpQuery = parse_qs(environ['QUERY_STRING'])

        userinput_Event_Name = HttpQuery.get('Event_Name', ['%'])[0]

        userinput_Event_Type = HttpQuery.get('Event_Type', ['%'])[0]

        userinput_Host = HttpQuery.get('Host', ['%'])[0]

        userinput_Participants = HttpQuery.get('Participants', ['%'])[0]

        userinput_Date_And_Time = HttpQuery.get('Date_And_Time', ['%'])[0]

        userinput_Location = HttpQuery.get('Location', ['%'])[0]

        userinput_Email = HttpQuery.get('Email', ['%'])[0]

        userinput_Price = HttpQuery.get('Price', ['%'])[0]




        # construct the SQL command (this time it's an INSERT statement)
        sql_cmd = "INSERT INTO Eventi (Event_Name, Event_Type, Host, Participants, Date_And_Time, Location, Email, Price ) VALUES ('" +userinput_Event_Name+"', '"+userinput_Event_Type+"', '"+userinput_Host+"', '"+str(userinput_Participants)+"','"+str(userinput_Date_And_Time)+"', '"+userinput_Location+"',  '"+userinput_Email+"', '"+str(userinput_Price)+"')"

        #sql_cmd = "INSERT INTO Event_ (Event_Name, Event_Type, Host, Participants, Date_And_Time, Location, Price, Email) VALUES (%s, %s, %s, %s, %s, %s, %s, %s)"
        #val = [
        #("Time to Rock", "Concert", "Rockpalace Tübingen", "120", "02.06.2021 19:30", "Tübingen", "rockpalace@gmail.com", "15"),
        #("Quiet Lane", "Concert", "Johannes Reising", "200", "20.05.2021 20:00", "Stuttgart", "Reising.94@web.de", "12,60"),
        #("House Party", "Party", "James Reed", "20", "15.05.2021 18:00", "Reutlingen", "James.reed@gmail.com", "10"),
        #("After Work Party", "Party", "Lara Tann", "30", "10.06.2021 21:00", "Reutlingen", "Lara-Tann@yahoo.com", "10"),
        #("Club-party", "Party", "Club Stuttgart", "60", "01.06.2021 21:00", "Stuttgart", "Stuttgart.Club@gmx.com", "12"),



        print ("+++++++++++ SQL command +++++ ", sql_cmd)

        executeSQLCommand(sql_cmd)

        # #### Just display all messages in the DB to the user (to indicate that the insert has indeed happened)

        # send a SQL command (selecting all messages from the Message Table) to the SQL Server
        sql_cmd = "SELECT Eventi.Event_Name, Eventi.Event_Type, Eventi.Host, Eventi.Participants, Eventi.Date_And_Time, Eventi.Location, Eventi.Email, Eventi.Price FROM Eventi"

        #print ("+++++++++++ SQL command +++++ ", sql_cmd)

        Eventi_from_db = executeSQLCommand(sql_cmd)

        # display the result (each author and message) formatted for html

        Eventi_table_string = ""
        for Eventis_record in Eventi_from_db:
            # a record is a LIST of values (one value per column), so we need to access each value separately.
            # This follows the sequence in the SELECT statement above, starting with 0!
            Event_Name = str (Eventis_record[0]) # employee_record[0] includes the FirstName value
            Event_Type = str (Eventis_record[1]) # employee_record[1] includes the LastName value
            Host = str (Eventis_record[2])
            Participants = str (Eventis_record[3])
            Date_And_Time = str (Eventis_record[4])
            Location = str (Eventis_record[5])
            Price = str (Eventis_record[6])
            Email = str (Eventis_record[7])

            Eventi_table_string += "<tr>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Event_Name
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Event_Type
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Host
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Participants
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Date_And_Time
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Location
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Price
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Email
            Eventi_table_string += "</td>"
            Eventi_table_string += "<tr>"

            print ("++++++++++++++++++", Event_Name, Event_Type, Host, Participants, Date_And_Time, Location, Price, Email )



        content = HOST_EVENT_START + Eventi_table_string + HOST_EVENT_END

    elif environ.get('PATH_INFO') == '/club':
        status = '200 OK'


        print ("############Club page#############")

        sql_cmd = "SELECT Eventi.ID, Eventi.Event_Name,Eventi.Event_Type, Eventi.Host, Eventi.Participants, Eventi.Date_And_Time, Eventi.Location, Eventi.Email, Eventi.Price FROM Eventi"
        print ("+++++++++++ SQL command +++++ ", sql_cmd)
        
        sql_cmd = "SELECT Eventi.Event_Type From Eventi Value Club"

        Eventi_from_db = executeSQLCommand(sql_cmd)

        Eventi_table_string = ""
        for Eventis_record in Eventi_from_db:
            # a record is a LIST of values (one value per column), so we need to access each value separately.
            # This follows the sequence in the SELECT statement above, starting with 0!
            ID = str (Eventis_record[0])
            Event_Name = str (Eventis_record[1]) # employee_record[0] includes the FirstName value # employee_record[1] includes the LastName value
            Event_Type = str (Eventis_record[2])
            Host = str (Eventis_record[3])
            Participants = str (Eventis_record[4])
            Date_And_Time = str (Eventis_record[5])
            Location = str (Eventis_record[6])
            Price = str (Eventis_record[7])
            Email = str (Eventis_record[8])

            Eventi_table_string += "<tr>"
            Eventi_table_string += "<td>"
            Eventi_table_string += ID
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Event_Name
            Eventi_table_string += "</td>"
             Eventi_table_string += "<td>"
            Eventi_table_string += Event_Type
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Host
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Participants
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Date_And_Time
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Location
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Price
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Email
            Eventi_table_string += "</td>"
            Eventi_table_string += "<tr>"

            print ("++++++++++HTML string ++++++++", ID, Event_Name, Event_Type, Host, Participants, Date_And_Time, Location, Price, Email )



        content = CLUB_START+ Eventi_table_string  + CLUB_END


    elif environ.get('PATH_INFO') == '/SEARCH':
        status = '200 OK'


        print ("###################  SEARCH PAGE ########################")
        # get the input that the user typed into the HTML search text box
        HttpQuery = parse_qs(environ['QUERY_STRING'])
        userinput = HttpQuery.get('searchstring', ['%'])[0]


        # modify the sql statement so that the user input is somehow in there
        # send a SQL command (selecting the wanted messages from the Message Table) to the SQL Server
        sql_cmd = "SELECT Eventi.ID, Eventi.Event_Name, Eventi.Event_Type, Eventi.Host, Eventi.Participants, Eventi.Date_And_Time, Eventi.Location, Eventi.Email, Eventi.Price FROM Eventi WHERE Eventi.ID like '" + userinput + "'"
        print ("+++++++++++ SQL command +++++ ", sql_cmd)
        
        sql_cmd = "SELECT Eventi.Event_Type From Eventi Value Club"

        Eventi_from_db = executeSQLCommand(sql_cmd)

        # display the result (each author and message) formatted for html

        Eventi_table_string = ""
        for Eventis_record in Eventi_from_db:
            # a record is a LIST of values (one value per column), so we need to access each value separately.
            # This follows the sequence in the SELECT statement above, starting with 0!
            ID = str (Eventis_record[0])
            Event_Name = str (Eventis_record[1]) # employee_record[0] includes the FirstName value# employee_record[1] includes the LastName value
            Eventi.Event_Type = str (Eventis_record[2])
            Host = str (Eventis_record[3])
            Participants = str (Eventis_record[4])
            Date_And_Time = str (Eventis_record[5])
            Location = str (Eventis_record[6])
            Price = str (Eventis_record[7])
            Email = str (Eventis_record[8])

            Eventi_table_string += "<tr>"
            Eventi_table_string += "<td>"
            Eventi_table_string += ID
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Event_Name
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Event_Type
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Host
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Participants
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Date_And_Time
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Location
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Price
            Eventi_table_string += "</td>"
            Eventi_table_string += "<td>"
            Eventi_table_string += Email
            Eventi_table_string += "</td>"
            Eventi_table_string += "<tr>"

            print ("++++++++++HTML string ++++++++", ID, Event_Name, Event_Name, Host, Participants, Date_And_Time, Location, Price, Email )



        content = CLUB_START + Eventi_table_string + CLUB_END






    elif environ.get('PATH_INFO') == '/about':
        status = '200 OK'
        content = ABOUT


    elif environ.get('PATH_INFO') == '/bar':
        status = '200 OK'
        content = BAR

    elif environ.get('PATH_INFO') == '/art':
        status = '200 OK'
        content = ART

    elif environ.get('PATH_INFO') == '/dinner':
        status = '200 OK'
        content = DINNER

    elif environ.get('PATH_INFO') == '/houseparty':
        status = '200 OK'
        content = HOUSEPARTY

    elif environ.get('PATH_INFO') == '/gamenight':
        status = '200 OK'
        content = GAMENIGHT

    elif environ.get('PATH_INFO') == '/caraoke':
        status = '200 OK'
        content = CARAOKE

    elif environ.get('PATH_INFO') == '/concert':
        status = '200 OK'
        content = CONCERT

    else:
        status = '404 NOT FOUND'
        content = '<h1>Page could not be found. </h1>'
    response_headers = [('Content-Type', 'text/html'), ('Content-Length', str(len(content)))]
    start_response(status, response_headers)
    yield content.encode('utf8')




# +++++++++++ HELLO WORLD +++++++++++
# A little pure-wsgi hello world we've cooked up, just
# to prove everything works.  You should delete this
# code to get your own working.

# This file contains the WSGI configuration required to serve up your
# web application at http://kokina.pythonanywhere.com/
# It works by setting the variable 'application' to a WSGI handler of some
# description.
#

# +++++++++++ GENERAL DEBUGGING TIPS +++++++++++
# getting imports and sys.path right can be fiddly!
# We've tried to collect some general tips here:
# https://help.pythonanywhere.com/pages/DebuggingImportError


# +++++++++++ HELLO WORLD +++++++++++
# A little pure-wsgi hello world we've cooked up, just
# to prove everything works.  You should delete this
# code to get your own working.

